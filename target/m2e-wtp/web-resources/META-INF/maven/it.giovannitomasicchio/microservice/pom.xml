<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>it.giovannitomasicchio</groupId>
	<artifactId>microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>microservice</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.M7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>42.1.4</version>
		</dependency>
		
		<!-- serve per convertire in JSON delle Entity ed evitare problemi di lazy loading -->
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-hibernate5</artifactId>
		</dependency>
        
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
			  <groupId>org.jooq</groupId>
			  <artifactId>jooq-codegen-maven</artifactId>
			
			  <!-- The plugin should hook into the generate goal -->
			  <executions>
			    <execution>
			      <goals>
			        <goal>generate</goal>
			      </goals>
			    </execution>
			  </executions>
			
			  <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
			  <dependencies>
			    <dependency>
				    <groupId>org.postgresql</groupId>
				    <artifactId>postgresql</artifactId>
				    <version>42.1.4</version>
				</dependency>
			  </dependencies>
			
			  <!-- Specify the plugin configuration.
			       The configuration format is the same as for the standalone code generator -->
			  <configuration>
			
			    <!-- JDBC connection parameters -->
			    <jdbc>
			      <driver>org.postgresql.Driver</driver>
			      <url>jdbc:postgresql://localhost/postgres</url>
			      <user>postgres</user>
			      <password>password</password>
			    </jdbc>
			
			    <!-- Generator parameters -->
			    <generator>
			      <database>
			        <name>org.jooq.util.postgres.PostgresDatabase</name>
			        <includes>.*</includes>
			        <excludes></excludes>
			        <inputSchema>public</inputSchema>
			      </database>
			      <target>
			        <packageName>it.giovannitomasicchio.microservice.jooq</packageName>
			        <directory>src/main/java</directory>
			      </target>
			    </generator>
			  </configuration>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
		
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>

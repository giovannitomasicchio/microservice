/*
 * This file is generated by jOOQ.
*/
package it.giovannitomasicchio.microservice.jooq.tables;


import it.giovannitomasicchio.microservice.jooq.Indexes;
import it.giovannitomasicchio.microservice.jooq.Keys;
import it.giovannitomasicchio.microservice.jooq.Public;
import it.giovannitomasicchio.microservice.jooq.tables.records.PostTagRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostTag extends TableImpl<PostTagRecord> {

    private static final long serialVersionUID = -1120581744;

    /**
     * The reference instance of <code>public.post_tag</code>
     */
    public static final PostTag POST_TAG = new PostTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostTagRecord> getRecordType() {
        return PostTagRecord.class;
    }

    /**
     * The column <code>public.post_tag.post_id</code>.
     */
    public final TableField<PostTagRecord, BigDecimal> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.post_tag.tag_id</code>.
     */
    public final TableField<PostTagRecord, BigDecimal> TAG_ID = createField("tag_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.post_tag</code> table reference
     */
    public PostTag() {
        this(DSL.name("post_tag"), null);
    }

    /**
     * Create an aliased <code>public.post_tag</code> table reference
     */
    public PostTag(String alias) {
        this(DSL.name(alias), POST_TAG);
    }

    /**
     * Create an aliased <code>public.post_tag</code> table reference
     */
    public PostTag(Name alias) {
        this(alias, POST_TAG);
    }

    private PostTag(Name alias, Table<PostTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostTag(Name alias, Table<PostTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POST_TAG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostTagRecord> getPrimaryKey() {
        return Keys.POST_TAG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostTagRecord>> getKeys() {
        return Arrays.<UniqueKey<PostTagRecord>>asList(Keys.POST_TAG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostTagRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostTagRecord, ?>>asList(Keys.POST_TAG__FK_POST_TAG_POST, Keys.POST_TAG__FK_POST_TAG_TAG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTag as(String alias) {
        return new PostTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTag as(Name alias) {
        return new PostTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostTag rename(String name) {
        return new PostTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostTag rename(Name name) {
        return new PostTag(name, null);
    }
}
